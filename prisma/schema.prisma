generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model bank_account {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bank_name      String   @db.VarChar(255)
  account_number String   @db.VarChar(255)
  balance        Int
  tenant_id      String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  tenant         tenant   @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model expense {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  expense_date DateTime @db.Date
  amount       Int
  category     String   @db.VarChar(255)
  tenant_id    String   @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  tenant       tenant   @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model invoice {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invoice_number String   @db.VarChar(255)
  invoice_date   DateTime @db.Date
  due_date       DateTime @db.Date
  total_amount   Int
  tenant_id      String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  tenant         tenant   @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tax {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tax_type   String   @db.VarChar(255)
  tax_rate   Int
  tenant_id  String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  tenant     tenant   @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tenant {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  bank_account bank_account[]
  expense      expense[]
  invoice      invoice[]
  tax          tax[]
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique @db.VarChar(255)
  firstName   String?  @db.VarChar(255)
  lastName    String?  @db.VarChar(255)
  roq_user_id String   @db.VarChar(255)
  tenant_id   String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  tenant      tenant[]
}
